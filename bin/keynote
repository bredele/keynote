#!/usr/bin/env node

var fs = require('fs'),
		read = fs.readFileSync,
		write = fs.writeFile,
		resolve = require('path').resolve,
		program = require('commander'),
		ncp = require('ncp'),
		mkdir = require('mkdirp').sync,
		walk = require('./walk'),
		serve = require('./serve');


function supplant(text, data){
  return text.replace(/\{\{([^}]+)\}\}/g, function(_, expr) {
    return data[expr.trim()] || '';
  });
}

/**
 * Usage.
 */

program
  .version(require('../package.json').version)
  .option('-o, --output <output>', 'create keynote directory with output')
  .option('-p, --path <path>', 'run keynote on path', '.')



/**
 * Examples.
 */

program.on('--help', function () {
  console.log('  Examples:');
});


/**
 * Parse.
 */

program.parse(process.argv);

// path

var output = program.output || './keynote';
var path = resolve(program.path);

//config
var config = {
	title: 'keynote'
};

var json = null;
try {
 json = require(path + '/keynote.json');
} catch(e) {
	//console.log(e);
}


for(var prop in json) {
	config[prop] = json[prop];
}

config.keynote = walk(path);

//create output directory

mkdir(output);

//update output directory

ncp(__dirname + '/basic', output, function(err) {
	if(err) throw err;
	var file = read(output + '/index.html', {
		encoding: 'utf-8'
	});
	write(output + '/index.html', supplant(file, config), function() {
		if(err) throw err;
	});
});


serve(output);